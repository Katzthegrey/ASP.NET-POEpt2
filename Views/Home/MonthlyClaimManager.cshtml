@using POEpt1.ViewModels;
@model MonthlyClaimsManagerViewModel
@{
    ViewData["Title"] = "Monthly Claims Manager";
}
@Html.Partial("_menu")
<link rel="stylesheet" href="~/css/SignUp.css" />

<div class="ClaimsMSG">
    <h1>Monthly Claims Manager</h1>
    <h2>Welcome @Model.ManagerName</h2>
</div>

<!-- Manager Table -->
<div class="claims-card">
    <div class="card-header claims-card-header">
        <h3 class="card-title claims-card-title">Approved Claims - Payment Review</h3>
        <span class="badge bg-primary claims-badge">@Model.Claims.Count Claims Ready for Review</span>
    </div>
    <div class="card-body">
        @if (Model.Claims.Any())
        {
            <table class="table table-bordered table-striped claims-table">
                <thead>
                    <tr>
                        <th>Claim ID</th>
                        <th>Staff ID</th>
                        <th>Lecturer Name</th>
                        <th>Course</th>
                        <th>Coordinator</th>
                        <th>Date</th>
                        <th>Total Hours</th>
                        <th>Total Amount</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var claim in Model.Claims)
                    {
                        <tr>
                            <td class="claim-id">@claim.ClaimId</td>
                            <td class="staff-id">@claim.StaffId</td>
                            <td>@claim.StaffName</td>
                            <td>@claim.CourseName</td>
                            <td>@claim.CoordinatorName</td>
                            <td>@claim.ClaimDate.ToString("yyyy-MM-dd")</td>
                            <td class="numeric-cell">@claim.TotalHours.ToString("F1")h</td>
                            <td class="numeric-cell fw-bold">R @claim.TotalAmount.ToString("N2")</td>
                            <td>
                                <span class="badge @GetStatusBadgeClass(claim.FinalStatus) claims-badge">@claim.FinalStatus</span>
                            </td>
                            <td>
                                <div class="manager-btn-group">
                                    <form asp-action="AuthorizePayment" method="post" class="d-inline">
                                        <input type="hidden" name="claimId" value="@claim.ClaimId" />
                                        <button type="submit" class="btn btn-success btn-sm"
                                                onclick="return confirm('Authorize payment for claim #@claim.ClaimId?')">
                                            <i class="fas fa-check-circle"></i> Pay
                                        </button>
                                    </form>
                                    <form asp-action="PlaceOnHold" method="post" class="d-inline">
                                        <input type="hidden" name="claimId" value="@claim.ClaimId" />
                                        <button type="submit" class="btn btn-warning btn-sm"
                                                onclick="return confirm('Place claim #@claim.ClaimId on hold?')">
                                            <i class="fas fa-pause"></i> Hold
                                        </button>
                                    </form>
                                    <a asp-controller="Home" asp-action="ClaimDetails" asp-route-id="@claim.ClaimId"
                                       class="btn btn-info btn-sm">
                                        <i class="fas fa-eye"></i> View
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <div class="alert alert-info text-center">
                <h4>No approved claims found</h4>
                <p>There are no claims ready for payment review at this time.</p>
            </div>
        }
    </div>
</div>

<!-- Quick Stats - Below the table -->
<div class="quick-stats-container">
    <div class="stats-row">
        <div class="stat-card">
            <div class="stat-content">
                <div class="stat-number">@Model.Claims.Count</div>
                <div class="stat-label">Total Claims</div>
            </div>
        </div>
        <div class="stat-card">
            <div class="stat-content">
                <div class="stat-number">R @Model.Claims.Sum(c => c.TotalAmount).ToString("F2")</div>
                <div class="stat-label">Total Amount</div>
            </div>
        </div>
        <div class="stat-card">
            <div class="stat-content">
                <div class="stat-number">@Model.Claims.Count(c => c.FinalStatus == "Ready for Payment")</div>
                <div class="stat-label">Ready to Pay</div>
            </div>
        </div>
        <div class="stat-card">
            <div class="stat-content">
                <div class="stat-number">@Model.Claims.Count(c => c.FinalStatus == "On Hold")</div>
                <div class="stat-label">On Hold</div>
            </div>
        </div>
    </div>
</div>

@functions {
    private string GetStatusBadgeClass(string status)
    {
        return status.ToLower() switch
        {
            "ready for payment" => "bg-success claims-badge",
            "paid" => "bg-info claims-badge",
            "on hold" => "bg-warning claims-badge",
            "rejected" => "bg-danger claims-badge",
            _ => "bg-secondary claims-badge"
        };
    }
}
